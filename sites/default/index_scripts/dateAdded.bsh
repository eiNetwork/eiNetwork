import org.marc4j.marc.Record;
import org.marc4j.marc.ControlField;
import org.marc4j.marc.DataField;
import org.marc4j.marc.Subfield;
import java.text.SimpleDateFormat;
import java.util.date;

public Set getDateAdded(Record record){
  Set result = new LinkedHashSet();
  //Get the date the record was added from the 907d tag (should only be one).
  Set input = indexer.getFieldList(record, "907d");
  Iterator iter = input.iterator();
  int numHoldings = 0;
  StringBuffer branchStringBuff = new StringBuffer();
  while (iter.hasNext()) {
    String curDateAdded = iter.next();
    String ResultString = null;
    try {
      SimpleDateFormat formatter = new SimpleDateFormat("yyMMdd");
      Date dateAdded = formatter.parse(curDateAdded);
      //System.out.println("Indexing " + curDateAdded + " " + dateAdded.getTime());
      SimpleDateFormat formatter2 = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'");
      result.add(formatter2.format(dateAdded));
    } catch (Exception ex) {
      // Syntax error in the regular expression
      System.out.println("Unable to parse date added " + curDateAdded);
    }
  }
  return result;
}

public Set getRelativeTimeAdded(Record record){
  Set result = new LinkedHashSet();
  //Get the date the record was added from the 998b tag (should only be one).
  Set datesAdded = getDateAdded(record);
  Date now = new Date();
  for (Object curDateObj : datesAdded){
    String curDateStr = (String)curDateObj;
    SimpleDateFormat formatter2 = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'");
    Date curDate = formatter2.parse(curDateStr);
    long timeDifferenceDays = (now.getTime() - curDate.getTime()) / (1000 * 60 * 60 * 24); 
    if (timeDifferenceDays <= 1){
      result.add("Day");
    }
    if (timeDifferenceDays <= 7){
      result.add("Week");
    }
    if (timeDifferenceDays <= 30){
      result.add("Month");
    }
    if (timeDifferenceDays <= 60){
      result.add("2 Months");
    }
    if (timeDifferenceDays <= 90){
      result.add("Quarter");
    }
    if (timeDifferenceDays <= 180){
      result.add("Six Months");
    }
    if (timeDifferenceDays <= 365){
      result.add("Year");
    }
    
  } 
  return result;
}
