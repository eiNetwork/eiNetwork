import org.marc4j.marc.Record;
import org.marc4j.marc.ControlField;
import org.marc4j.marc.DataField;
import org.marc4j.marc.Subfield;

/**
 * Determine Record Format(s)
 *
 * @param  Record          record
 * @return Set     format of record
 */
public Set getFormat(Record record, String returnFirst){
    Set result = new LinkedHashSet();
  	String leader = record.getLeader().toString();
  	char leaderBit;
  	ControlField fixedField = (ControlField) record.getVariableField("008");
  	DataField title = (DataField) record.getVariableField("245");
  	char formatCode = ' ';

    //Check for Playaway format and blu-ray format
    DataField sysDetailsNote = (DataField) record.getVariableField("538");
    if (sysDetailsNote != null) {
        if (sysDetailsNote.getSubfield('a') != null){
            if (sysDetailsNote.getSubfield('a').getData().toLowerCase().contains("playaway")) {
                result.add("Playaway");
                return result;
            }else if (sysDetailsNote.getSubfield('a').getData().toLowerCase().contains("bluray") || 
                sysDetailsNote.getSubfield('a').getData().toLowerCase().contains("blu-ray")) {
                result.add("Blu-ray");
                return result;
            }
        }
    }
    
    // check if there's an h in the 245
  	if (title != null) {
	    if (title.getSubfield('h') != null){
	      if (title.getSubfield('h').getData().toLowerCase().contains("[electronic resource]")) {
	    		result.add("Electronic");
	    		return result;
	      }
    	}
    }
    
    //Check for large print book (large format in 650, 300, or 250 fields)
    //Check for blu-ray in 300 fields
    DataField edition = (DataField) record.getVariableField("250");
    if (edition != null) {
      if (edition.getSubfield('a') != null){
        if (edition.getSubfield('a').getData().toLowerCase().contains("large type")) {
          result.add("LargePrint");
          return result;
        }
      }
    }
    
    List physicalDescription = record.getVariableFields("300");
    if (physicalDescription != null) {
      Iterator fieldsIter = physicalDescription.iterator();
      DataField field;
      while(fieldsIter.hasNext()) {
        field = (DataField) fieldsIter.next();
        List subfields = field.getSubfields();
        Iterator subfieldIter = subfields.iterator();
        while (subfieldIter.hasNext()){
          Subfield subfield = subfieldIter.next();
          if (subfield.getData().toLowerCase().contains("large type")){
            result.add("LargePrint");
            return result;
          }else if (subfield.getData().toLowerCase().contains("bluray") || 
            subfield.getData().toLowerCase().contains("blu-ray")) {
            result.add("Blu-ray");
            return result;
          }
        }
      }
    } 
    List topicalTerm = record.getVariableFields("650");
    if (physicalDescription != null) {
      Iterator fieldsIter = topicalTerm.iterator();
      DataField field;
      while(fieldsIter.hasNext()) {
        field = (DataField) fieldsIter.next();
        List subfields = field.getSubfields();
        Iterator subfieldIter = subfields.iterator();
        while (subfieldIter.hasNext()){
          Subfield subfield = subfieldIter.next();
          if (subfield.getData().toLowerCase().contains("large type")){
            result.add("LargePrint");
            return result;
          }
        }
      }
    }   
    
    
    
    // check the 007 - this is a repeating field
    List fields = record.getVariableFields("007");
    if (fields != null) {
        Iterator fieldsIter = fields.iterator();
        ControlField formatField;
        while(fieldsIter.hasNext()) {
          formatField = (ControlField) fieldsIter.next();
          if (formatField.getData() == null || formatField.getData().length() < 2){
            continue;
          }
          //Check for blu-ray (s in position 4)
          //This logic does not appear correct.
          /*if (formatField.getData() != null && formatField.getData().length() >= 4){
            if (formatField.getData().toUpperCase().charAt(4) == 'S'){
              result.add("Blu-ray");
              break;
            }
          }*/
          formatCode = formatField.getData().toUpperCase().charAt(0);
    	    switch (formatCode) {
                case 'A':
                    switch(formatField.getData().toUpperCase().charAt(1)) {
                        case 'D':
                            result.add("Atlas");
                            break;
                        default:
                            result.add("Map");
                            break;
                    }
                    break;
                case 'C':
                    switch(formatField.getData().toUpperCase().charAt(1)) {
                        case 'A':
                            result.add("TapeCartridge");
                            break;
                        case 'B':
                            result.add("ChipCartridge");
                            break;
                        case 'C':
                            result.add("DiscCartridge");
                            break;
                        case 'F':
                            result.add("TapeCassette");
                            break;
                        case 'H':
                            result.add("TapeReel");
                            break;
                        case 'J':
                            result.add("FloppyDisk");
                            break;
                        case 'M':
                        case 'O':
                            result.add("CDROM");
                            break;
                        case 'R':
                            // Do not return - this will cause anything with an
                            // 856 field to be labeled as "Electronic"
                            break;
                        default:
                            result.add("Software");
                            break;
                    }
                    break;
                case 'D':
                    result.add("Globe");
                    break;
                case 'F':
                    result.add("Braille");
                    break;
                case 'G':
                    switch(formatField.getData().toUpperCase().charAt(1)) {
                        case 'C':
                        case 'D':
                            result.add("Filmstrip");
                            break;
                        case 'T':
                            result.add("Transparency");
                            break;
                        default:
                            result.add("Slide");
                            break;
                    }
                    break;
                case 'H':
                    result.add("Microfilm");
                    break;
                case 'K':
                    switch(formatField.getData().toUpperCase().charAt(1)) {
                        case 'C':
                            result.add("Collage");
                            break;
                        case 'D':
                            result.add("Drawing");
                            break;
                        case 'E':
                            result.add("Painting");
                            break;
                        case 'F':
                            result.add("Print");
                            break;
                        case 'G':
                            result.add("Photonegative");
                            break;
                        case 'J':
                            result.add("Print");
                            break;
                        case 'L':
                            result.add("Drawing");
                            break;
                        case 'O':
                            result.add("FlashCard");
                            break;
                        case 'N':
                            result.add("Chart");
                            break;
                        default:
                            result.add("Photo");
                            break;
                    }
                    break;
                case 'M':
                    switch(formatField.getData().toUpperCase().charAt(1)) {
                        case 'F':
                            result.add("VideoCassette");
                            break;
                        case 'R':
                            result.add("Filmstrip");
                            break;
                        default:
                            result.add("MotionPicture");
                            break;
                    }
                    break;
                case 'O':
                    result.add("Kit");
                    break;
                case 'Q':
                    result.add("MusicalScore");
                    break;
                case 'R':
                    result.add("SensorImage");
                    break;
                case 'S':
                    switch(formatField.getData().toUpperCase().charAt(1)) {
                        case 'D':
                            result.add("SoundDisc");
                            break;
                        case 'S':
                            result.add("SoundCassette");
                            break;
                        default:
                            result.add("SoundRecording");
                            break;
                    }
                    break;
                case 'V':
                    switch(formatField.getData().toUpperCase().charAt(1)) {
                        case 'C':
                            result.add("VideoCartridge");
                            break;
                        case 'D':
                            result.add("VideoDisc");
                            break;
                        case 'F':
                            result.add("VideoCassette");
                            break;
                        case 'R':
                            result.add("VideoReel");
                            break;
                        default:
                            result.add("Video");
                            break;
                    }
                    break;
        	}
        	if (returnFirst.equals("true") && !result.isEmpty()) {
            return result;
          }
        }
    	  if (!result.isEmpty()) {
            return result;
        }
    }

    // check the Leader at position 6
    if (leader.length() >= 6){
      leaderBit = leader.charAt(6);
      switch (Character.toUpperCase(leaderBit)) {
          case 'C':
          case 'D':
              result.add("MusicalScore");
              break;
          case 'E':
          case 'F':
              result.add("Map");
              break;
          case 'G':
              //We appear to have a number of items without 007 tags marked as G's.
              //These seem to be Videos rather than Slides.
              //result.add("Slide");
              result.add("Video");
              break;
          case 'I':
              result.add("SoundRecording");
              break;
          case 'J':
              result.add("MusicRecording");
              break;
          case 'K':
              result.add("Photo");
              break;
          case 'M':
              result.add("Electronic");
              break;
          case 'O':
          case 'P':
              result.add("Kit");
              break;
          case 'R':
              result.add("PhysicalObject");
              break;
          case 'T':
              result.add("Manuscript");
              break;
      }
    }
	  if (!result.isEmpty()) {
        return result;
    }

    if (leader.length() >= 7){
      // check the Leader at position 7
      leaderBit = leader.charAt(7);
      switch (Character.toUpperCase(leaderBit)) {
          // Monograph
          case 'M':
              if (formatCode == 'C') {
                  result.add("eBook");
              } else {
                  result.add("Book");
              }
              break;
          // Serial
          case 'S':
              // Look in 008 to determine what type of Continuing Resource
              formatCode = fixedField.getData().toUpperCase().charAt(21);
              switch (formatCode) {
                  case 'N':
                      result.add("Newspaper");
                      break;
                  case 'P':
                      result.add("Journal");
                      break;
                  default:
                      result.add("Serial");
                      break;
              }
      }
    }

    // Nothing worked!
	  if (result.isEmpty()) {
        result.add("Unknown");
    }
    
    return result;
}
