---
# Listing of search types and their component parts and weights.
#
# Format is:
#  searchType:
#    # CustomMunge is an optional section to define custom pre-processing of
#    #     user input.  See below for details of munge actions.
#    CustomMunge:
#      MungeName1:
#        - [action1, actionParams]
#        - [action2, actionParams]
#        - [action3, actionParams]
#      MungeName2:
#        - [action1, actionParams]
#    # DismaxFields is optional and defines the fields sent to the Dismax handler
#    #     when we are able to use it.  QueryFields will be used for advanced
#    #     searches that Dismax cannot support.  QueryFields is always used if no
#    #     DismaxFields section is defined.
#    DismaxFields:
#      - field1^boost
#      - field2^boost
#      - field3^boost
#    # DismaxParams is optional and allows you to override default Dismax settings
#    #     (i.e. mm / bf) on a search-by-search basis.  If you want global default
#    #     values for these settings, you can edit the "dismax" search handler in
#    #     solr/biblio/conf/solrconfig.xml.
#    DismaxParams:
#      - [param1_name, param1_value]
#      - [param2_name, param2_value]
#      - [param3_name, param3_value]
#    # QueryFields define the fields we are searching when not using Dismax
#    QueryFields:
#      - SolrField:
#        - [howToMungeSearchstring, weight]
#        - [differentMunge, weight]
#      - DifferentSolrField:
#        - [howToMunge, weight]
#    # The optional FilterQuery section allows you to AND a static query to the
#    #     dynamic query generated using the QueryFields; see JournalTitle below
#    #     for an example.  This is applied whether we use DismaxFields or 
#    #     QueryFields.
#    FilterQuery: (optional Lucene filter query)
# 
# ...etc.
#
#-----------------------------------------------------------------------------------
#
# Within the QueryFields area, fields are OR'd together, unless they're in an 
# anonymous array, in which case the first element is a two-value array that tells 
# us what the type (AND or OR) and weight of the whole group should be.
#
# So, given:
#
# test:
#   QueryFields:
#     - A:
#       - [onephrase, 500]
#       - [and, 200]
#     - B:
#       - [and, 100]   
#       - [or, 50]  
#     # Start an anonymous array to group; first element indicates AND grouping 
#     #     and a weight of 50
#     -
#       - [AND, 50]                 
#       - C:
#         - [onephrase, 200]
#       - D:
#         - [onephrase, 300]
#       # Note the "not" attached to the field name as a minus, and the use of ~ 
#       #     to mean null ("no special weight")
#       - -E:
#         - [or, ~]
#     - D:
#       - [or, 100]
# 
#  ...and the search string 
#
#      test "one two"
#
#  ...we'd get
#   
#   (A:"test one two"^500 OR 
#    A:(test AND "one two")^ 200 OR
#    B:(test AND "one two")^100 OR
#    B:(test OR "one two")^50
#    (
#      C:("test one two")^200 AND
#      D:"test one two"^300 AND
#      -E:(test OR "one two")
#    )^50 OR
#    D:(test OR "one two")^100
#   )
#
#-----------------------------------------------------------------------------------
#
# Munge types are based on the original Solr.php code, and consist of:
#
# onephrase: eliminate all quotes and do it as a single phrase. 
#   testing "one two"
#    ...becomes ("testing one two")
#
# and: AND the terms together
#  testing "one two"
#   ...becomes (testing AND "one two")
#
# or: OR the terms together
#  testing "one two"
#   ...becomes (testing OR "one two")
#
# Additional Munge types can be defined in the CustomMunge section.  Each array
# entry under CustomMunge defines a new named munge type.  Each array entry under
# the name of the munge type specifies a string manipulation operation.  Operations
# will be applied in the order listed, and different operations take different
# numbers of parameters.
#
# Munge operations:
#
# [append, text] - Append text to the end of the user's search string
# [lowercase] - Convert string to lowercase
# [preg_replace, pattern, replacement] - Perform a regular expression replace
#                                        using the preg_replace() PHP function
# [uppercase] - Convert string to uppercase
#
# See the CallNumber search below for an example of custom munging in action.
#-----------------------------------------------------------------------------------

# These searches use Dismax when possible:
Author:
  QueryFields:
    - author:
      - [onephrase, 350]
      - [and, 200]
    - author2:
      - [onephrase, 100]
      - [and, 50]
    - author_additional:
      - [onephrase, 100]
      - [and, 50]

ISN:
  DismaxFields:
    - isbn
    - issn
    - upc
  QueryFields:
    - issn:
      - [and, 100]
      - [or, ~]
    - isbn:
      - [and, 100]
      - [or, ~]
    - upc:
      - [and, 100]
      - [or, ~]

Subject:
  DismaxFields:
    - topic^100
    - geographic^50
    - genre^50
    - era
  QueryFields:
    - topic:
      - [onephrase, 300]
      - [and, 100]
      - [or, ~]
    - geographic:
      - [onephrase, 300]
      - [and, 100]
      - [or, ~]
    - genre:
      - [onephrase, 300]
      - [and, 100]
      - [or, ~]
    - era:
      - [and, 100]
      - [or, ~]
      
SubjectProper:
  DismaxFields:
    - topic_proper^100
    - geographic_proper^50
    - genre_proper^50
    - era_proper
  QueryFields:
    - topic_proper:
      - [onephrase, 300]
      - [and, 100]
      - [or, ~]
    - geographic_proper:
      - [onephrase, 300]
      - [and, 100]
      - [or, ~]
    - genre_proper:
      - [onephrase, 300]
      - [and, 100]
      - [or, ~]
    - era_proper:
      - [and, 100]
      - [or, ~]      

JournalTitle:
  DismaxFields:
    - title_short^500
    - title_full^400
    - title^300
    - title_alt^200
    - title_new^100
    - title_old
    - series^100
    - series2
  QueryFields:
    - title_short:
      - [onephrase, 500]
    - title_full:
      - [onephrase, 400]
    - title:
      - [onephrase, 300]
      - [and, 250]
    - title_alt:
      - [and, 200]
    - title_new:
      - [and, 100]
    - title_old:
      - [and, ~]  
    - series:
      - [onephrase, 100]
      - [and, 50]
    - series2:
      - [onephrase, 50]
      - [and , ~]
  FilterQuery: "format:Journal"

Title:
  QueryFields:
    - title_proper:
      - [onephrase, 600]
    - title_short:
      - [onephrase, 500]
    - title_full:
      - [onephrase, 400]
    - title:
      - [onephrase, 300]
      - [and, 250]
    - title_alt:
      - [and, 200]
    - title_new:
      - [and, 100]
    - title_old:
      - [and, ~]  
    - series_proper:
      - [onephrase, 200]
      - [and, 100]
    - series:
      - [onephrase, 100]
      - [and, 50]
    - series2:
      - [onephrase, 50]
      - [and , ~]
      
TitleProper:
  DismaxFields:
    - title_proper^500
    - series_proper^100
  QueryFields:
    - title_proper:
      - [onephrase, 500]
    - series_proper:
      - [onephrase, 100]
      - [and, 50]

Series:
  DismaxFields:
    - series^100
    - series2
  QueryFields:
    - series:
      - [onephrase, 500]
      - [and, 200]
      - [or, 100]
    - series2:
      - [onephrase, 50]
      - [and, 50]
      - [or, ~]

SeriesProper:
  DismaxFields:
    - series_proper^100
  QueryFields:
    - series_proper:
      - [onephrase, 500]
      - [and, 200]
      - [or, 100]

AllFields:
  DismaxFields:
    - allfields
  QueryFields:
    allfields:
      - [or, ~]

AllFieldsProper:
  DismaxFields:
    - allfields_proper
  QueryFields:
    allfields_proper:
      - [or, ~]
      
Keyword:
  QueryFields:
    - 
      - [OR, 50]
      - title_proper:
        - [onephrase, 300]
        - [and, 200]
      - title:
        - [onephrase, 200]
        - [and, 125]
      - title_alt:
        - [and, 100]
      - title_new:
        - [and, 50]
    series:
      - [onephrase, 300]
      - [and, 50]
    series2:
      - [and, 30]
    author:
      - [onephrase, 250]
      - [and, 200]
    author2:
      - [and, 50]
    author_additional:
      - [and, 50]
    contents:
      - [and, 10]
    topic:
      - [onephrase, 125]
    geographic:
      - [onephrase, 75]
    genre:
      - [onephrase, 75]
    keywords:
      - [onephrase, 200]
      - [and, 100]
    issn:
      - [and, 100]
      - [or, ~]
    isbn:
      - [and, 100]
      - [or, ~]
    upc:
      - [and, 100]
      - [or, ~]
    econtentText:
      - [onephrase, 500]
      
KeywordProper:
  DismaxFields:
    - title_proper^850
    - series_proper^100
    - author^300
    - contents_proper^10
    - topic_proper^500
    - geographic_proper^300
    - genre_proper^300
    - keywords_proper
    - isbn
    - issn
    - upc
    - econtentText_unstemmed
  QueryFields:
    title_proper:
      - [onephrase, 300]
      - [and, 100]
    series_proper:
      - [and, 50]
    author:
      - [onephrase, 300]
      - [and, 250]
    contents_proper:
      - [and, 10]
    topic_proper:
      - [onephrase, 500]
    geographic_proper:
      - [onephrase, 300]
    genre_proper:
      - [onephrase, 300]
    keywords_proper:
      - [onephrase, 100]
      - [and, 50]
    issn:
      - [and, 100]
      - [or, ~]
    isbn:
      - [and, 100]
      - [or, ~]
    upc:
      - [and, 100]
      - [or, ~]      
    econtentText_unstemmed:
      - [onephrase, 500]
      
# These are advanced searches that never use Dismax:
id:
  QueryFields:
    - id:
      - [onephrase, ~]
      - [or, ~]

CallNumber:
  CustomMunge:
    callnumber:
      - [uppercase]
      # Strip whitespace and quotes:
      - [preg_replace, '/[ "]/', ""]
      # Strip pre-existing trailing asterisks:
      - [preg_replace, "/\*+$/", ""]
      # Ensure we have just one trailing asterisk.  The trailing space inside
      #     the quotes has no effect on searching; it is a workaround for a
      #     Horde::YAML parsing glitch -- see VUFIND-160 in JIRA for details.
      - [append, "* "]
  QueryFields:
    - callnumber:
      - [callnumber, ~]
    - dewey-full:
      - [callnumber, ~]

publisher:
  QueryFields:
    - publisher:
      - [and, 100]
      - [or, ~]

year:
  QueryFields:
    - publishDate:
      - [and, 100]
      - [or, ~]

language:
  QueryFields:
    - language:
      - [and, ~]

toc:
  QueryFields:
    - contents:
      - [and, 100]
      - [or, ~]

topic:
  QueryFields:
    - topic:
      - [and, 50]
    - topic_facet:
      - [and, ~]

geographic:
  QueryFields:
    - geographic:
      - [and, 50]
    - geographic_facet:
      - [and ~]

genre:
  QueryFields:
    - genre:
      - [and, 50]
    - genre_facet:
      - [and, ~]

era:
  QueryFields:
    - era:
      - [and, ~]
      
econtentText:
  QueryFields:
    - econtentText:
      - [onephrase, 500]
      - [and, 100]

GenealogyKeyword:
  DismaxFields:
    - keywords
  QueryFields:
    - keywords
      - [onephrase, 100]

GenealogyName:
  QueryFields:
    - 
      - [AND, 100]
      - firstName:
        - [and, 100]
      - lastName:
        - [and, 100]
      - maidenName:
        - [and, 75]
      - middleName:
        - [and, 50]
      - nickName:
        - [and, ~]
      - otherName:
        - [and, ~]
    - title: 
      - [onephrase, 350]
      - [and, 200]